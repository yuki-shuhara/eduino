package processing.app;

import javax.swing.Box;

import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.SpringLayout;
import javax.swing.border.BevelBorder;

import processing.app.Editor.FileDropHandler;
import processing.app.Editor.TextAreaPopup;
import processing.app.syntax.JEditTextArea;
import processing.app.syntax.PdeTextAreaDefaults;

import java.awt.Container;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;


/* CreatePanelクラスでは、パネルを作成する。また、今後の実装で、データの管理も行うようにする*/

public class CreatePanel extends JPanel implements ActionListener{
  
  public JPanel pane;
  public JPanel base;
  
  /*コンボボックス用*/
  private JComboBox jComboBox1;
  private JComboBox jComboBox2;
  private DefaultComboBoxModel com1,com2,com3,com4;
  private JComboBox combo = new JComboBox();
  private JComboBox action1 = new JComboBox();
  private JComboBox action2 = new JComboBox();
  private Object [] combo1 ={"LED", "モーター"};
  private Object [] combo2 ={"光らせる", "光らせない"};
  private Object [] combo3 ={"回転させる", "止める"};
  private Object [] combo4 ={"-", "-"};
  /*ここまでコンボボックス用*/
  
  /*ラベル用*/
  private JLabel jLabel;
  /*ここまでラベル用*/
  
  public CreatePanel(){
    factory(); //テスト用にfactoryを指定。本番は所定のパネル作成関数に振り分けるようにする
  }
  
  public void factory(){ //テスト用に内容は固定。本番は所定のパーツを乗せるように書き換える
  
    panelInit();
  /*パネル作成用フィールド
   * ここで各パネルを作り出す
   * 引数を１つ追加して作成するパネルの種類を指定する？*/
    Combobox();
    basePanel();
}
  
   /*** Create BasePanel ***/
  public void basePanel(){
    base = new JPanel();
    base.setPreferredSize(new Dimension(130,130));
    base.add(pane);
    //pane = base;
  }
  
   /*** Create Panel ***/
  public void panelInit(){
    pane = new JPanel();
    pane.setPreferredSize(new Dimension(120, 50));
    pane.setBackground(Color.BLUE); 
    
  }
  
   /*** Create Label ***/
  public void Label(int select){
    jLabel = new JLabel();
    
    switch(select){
    case 1: jLabel.setText("を");
            break;
    case 2: jLabel.setText("に");
            break;
    default:jLabel.setText("");
    }
    
    pane.add(jLabel);
  }
   
   /*** Create ComboBox ***/
   public void Combobox() {
    com1= new DefaultComboBoxModel(combo1);
    com2= new DefaultComboBoxModel(combo2);
    com3= new DefaultComboBoxModel(combo3);
    com4= new DefaultComboBoxModel(combo4);
    initComponents();
    jComboBox1.setModel(com1);
    jComboBox2.setModel(com2);

    pane.add(jComboBox1);
    Label(2);
    pane.add(jComboBox2);
}

    /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    // <editor-fold defaultstate="collapsed" desc=" 生成されたコード">
    private void initComponents() {
    jComboBox1 = new JComboBox();
    jComboBox2 = new JComboBox();

    //getContentPane().setLayout(null);

    /*setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);*/
    jComboBox1.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent evt) {
    jComboBox1ActionPerformed(evt);
    }
    });
    }
    /*getContentPane().add(jComboBox1);
    jComboBox1.setBounds(50, 60, 110, 21);

    getContentPane().add(jComboBox2);
    jComboBox2.setBounds(250, 60, 110, 21);

    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    setBounds((screenSize.width-408)/2, (screenSize.height-332)/2, 408, 332);
    }*/
    // </editor-fold>

    /***ComboBox1の動作で、ComboBox2を連動させる***/
    private void jComboBox1ActionPerformed(ActionEvent evt) {

    if (jComboBox1.getSelectedItem().equals(combo1[0])){
    jComboBox2.setModel(com2);
    }else if (jComboBox1.getSelectedItem().equals(combo1[1])){
    jComboBox2.setModel(com3);
    }else {
    jComboBox2.setModel(com4); //未使用
    }

   //edus_111019 ここに処理コードを追加: edue
}
    /*** END CreateComboBox ***/
    
    
    public JPanel create(){
      return base; //作ったパネルを土台に乗せてリターン
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
      // TODO Auto-generated method stub
    }

}
//edus_11101X -added
  

